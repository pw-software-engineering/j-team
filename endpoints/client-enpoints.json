{
  "openapi": "3.0.0",
  "info": {
    "title": "Client API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://hotelservices.com/api-client/"
    }
  ],
  "paths": {
    "/client": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "name": "Jan",
                  "surname": "Kowalski",
                  "username": "User123",
                  "email": "j.kowalski@example.mail.com"
                },
                "schema": {
                  "$ref": "#/components/schemas/clientInfo"
                }
              }
            }
          },
          "401": {
            "description": "Login credentials not correct"
          }
        },
        "description": "Get logged in client information.",
        "operationId": "GET_client"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Profile was successfuly updated."
          },
          "400": {
            "description": "Profile couldn't be updated.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "Invalid-email-format": {
                      "errorDescription": "Provided email has an invalid format"
                    },
                    "Invalid-username": {
                      "errorDescription": "Provided username contains invalid characters or does not differ from currently set username"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "description": "Update currently logged in client's information.",
        "operationId": "PATCH_client",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Only-username-change": {
                  "username": "newUsername123"
                },
                "Username-and-email-change": {
                  "email": "newEmail@example.mail2.pl",
                  "username": "newUsername123"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/editClientInfo"
              }
            }
          },
          "required": true
        }
      }
    },
    "/client/login": {
      "post": {
        "responses": {
          "200": {
            "description": "A JWT token generated by the server",
            "content": {
              "application/json": {
                "example": {
                  "id": 7,
                  "createdAt": "2020-10-02T10:00:00-05:00"
                },
                "schema": {
                  "$ref": "#/components/schemas/clientSessionToken"
                }
              }
            }
          },
          "401": {
            "description": "User with provided login (email) does not exists or provided password is incorrect",
            "content": {
              "application/json": {
                "example": {
                  "desc": "Provided credentials are incorrect"
                },
                "schema": {
                  "$ref": "#/components/schemas/authenticationError"
                }
              }
            }
          }
        },
        "description": "Endpoint used to acquire client token used for further authentication and authorization. This endpoint is not protected by a security scheme.",
        "operationId": "POST_client-login",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "login": "usermail123@example.mail.com",
                "password": "password123"
              },
              "schema": {
                "$ref": "#/components/schemas/clientSecrets"
              }
            }
          },
          "required": true
        }
      }
    },
    "/client/reservations": {
      "get": {
        "responses": {
          "200": {
            "description": "List of reservation information and offerID relating to the reservation and preview information related to the hotel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/[\n  {\n    \"hotelInfoPreview\": {\n      \"hotelID\": int,\n      \"hotelName\": string,\n      \"country\": string,\n      \"city\": string\n    },\n    \"reservationInfo\":  {\n      \"reservationID\": int,\n      \"from\": datetime,\n      \"to\": datetime,\n      \"numberOfChildren\": int,\n      \"numberOfAdults\": int,\n      \"reviewID\": int? optional - present if there is no client review for an offer\n    }\n    \"offerInfoPreview\": {\n      \"offerID\": int,\n      \"offerTitle\": string,\n      \"offerPreviewPicture\": file,\n    }\n  }\n]"
                }
              }
            }
          }
        },
        "description": "Get list of all reservations made by the client",
        "operationId": "GET_client-reservations"
      }
    },
    "/client/reservations/{reservationID}": {
      "delete": {
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Reservations cannot be deleted unless they haven't begun",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "error": "Reservation is currently underway or already completed"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Cannot delete reservation becuase of no ownership of a reservation with ID equal to reservationID path parameter"
          },
          "404": {
            "description": "Reservation with ID equal to reservationID path parameter doesn't exist"
          }
        },
        "description": "Cancel exisiting reservation provided that it hasn't started",
        "operationId": "DELETE_client-reservations-reservationID"
      },
      "parameters": [
        {
          "name": "reservationID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/client/reservations/{reservationID}/review": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/{\n  \"reviewID\": int,\n  \"content\": string,\n  \"rating\": int,\n  \"creationDate\": datetime,\n  \"reviewerUsername\": string\n}\n"
                }
              }
            }
          },
          "404": {
            "description": "Reservation not found"
          }
        },
        "description": "Pobiera opiniÄ™ do danej rezerwacji",
        "operationId": "GET_client-reservations-reservationID-review"
      },
      "put": {
        "responses": {
          "default": {
            "description": ""
          }
        },
        "description": "Creates/edits a new review related to an offer",
        "operationId": "PUT_client-reservations-reservationID-review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/{\n  \"content\": string,\n  \"rating\": int,\n}                \n"
              }
            },
            "responses": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "description": "Deletes a client review related to an offer",
        "operationId": "DELETE_client-reservations-reservationID-review"
      },
      "parameters": [
        {
          "name": "reservationID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/hotels": {
      "get": {
        "responses": {
          "200": {
            "description": "Array of objects containing preview information related to hotels",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/[\n  {\n    \"hotelID\": int,\n    \"hotelName\": string,\n    \"country\": string,\n    \"city\": string,\n    \"previewPicture\": file\n  }\n]"
                }
              }
            }
          }
        },
        "description": "Returns list of hotels according to filter values",
        "operationId": "GET_hotels",
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/search based on prefix match case-insensitive"
            }
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hotelName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/hotels/{hotelID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/{\n  \"hotelName\": string,\n  \"hotelDescription\": string,\n  \"country\": string,\n  \"city\": string,\n  \"hotelPictures\": file[]\n}\n"
                }
              }
            }
          },
          "404": {
            "description": "Hotel with ID equal to hotelID parameter does not exist"
          }
        },
        "description": "Gets detailed information about a hotel",
        "operationId": "GET_hotels-hotelID"
      },
      "parameters": [
        {
          "name": "hotelID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/hotels/{hotelID}/offers": {
      "get": {
        "responses": {
          "default": {
            "description": ""
          }
        },
        "description": "Returns list of offers according to filter values",
        "operationId": "GET_hotels-hotelID-offers",
        "parameters": [
          {
            "name": "fromTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "minGuests",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "costMax",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "costMin",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "hotelID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/hotels/{hotelID}/offers/{offerID}": {
      "get": {
        "responses": {
          "default": {
            "description": ""
          }
        },
        "description": "Returns detailed information about an offer",
        "operationId": "GET_hotels-hotelID-offers-offerID"
      },
      "parameters": [
        {
          "name": "offerID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "hotelID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/hotels/{hotelID}/offers/{offerID}/reservations": {
      "post": {
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Cannot create a reservation if the offer is inactive or deleted or is unavailable during chosen time interval",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "error": "Offer is not available - please refresh information related to the offer availability"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "description": "Create new reservation",
        "operationId": "POST_hotels-hotelID-offers-offerID-reservations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/{\n  \"from\": datetime,\n  \"to\": datetime,\n  \"numberOfChildren\": int,\n  \"numberOfAdults\": int\n}\n"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "hotelID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "offerID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/hotels/{hotelID}/offers/{offerID}/reviews": {
      "get": {
        "responses": {
          "200": {
            "description": "An arry of objects containing information related to offer reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/[\n  {\n    \"reviewID\": int,\n    \"content\": string,\n    \"rating\": int,\n    \"creationDate\": datetime,\n    \"reviewerUsername\": string\n  }\n]"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "description": "Returns all reviews related to an offer",
        "operationId": "GET_hotels-hotelID-offers-offerID-reviews"
      },
      "parameters": [
        {
          "name": "hotelID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "offerID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/hotels/{hotelID}/reviews": {
      "get": {
        "responses": {
          "200": {
            "description": "An arry of objects containing information related to offer reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/[\n  {\n    \"reviewID\": int,\n    \"offerID\": int,\n    \"offerTitle\": string,\n    \"content\": string,\n    \"rating\": int,\n    \"creationDate\": datetime,\n    \"reviewerUsername\": string\n  }\n]"
                }
              }
            }
          },
          "404": {
            "description": "Hotel not found"
          }
        },
        "description": "Returns all reviews related to a hotel",
        "operationId": "GET_hotels-hotelID-reviews"
      },
      "parameters": [
        {
          "name": "hotelID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "authenticationError": {
        "type": "object",
        "properties": {
          "desc": {
            "description": "A description of the type of the authentication error.",
            "type": "string"
          }
        },
        "required": [
          "desc"
        ]
      },
      "clientSessionToken": {
        "type": "object",
        "properties": {
          "id": {
            "description": "An unique client ID used in accessing server resources.",
            "type": "integer"
          },
          "createdAt": {
            "description": "Date of token creation",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt"
        ]
      },
      "clientSecrets": {
        "description": "An object containing client secrets (login, password) necessary for initial authentication and distribution of a token.",
        "type": "object",
        "properties": {
          "login": {
            "description": "Current user email is used as a login",
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "clientInfo": {
        "description": "Data describing client's account",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "surname",
          "username",
          "email"
        ]
      },
      "editClientInfo": {
        "minProperties": 1,
        "description": "Data describing client's account",
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "customSecurityToken": {
        "description": "Custom security token generated by the server. Distributed to clients upon successful login and used for requests requiring client authentication.",
        "type": "apiKey",
        "in": "header",
        "name": "x-session-token"
      }
    },
    "links": {},
    "callbacks": {}
  }
}